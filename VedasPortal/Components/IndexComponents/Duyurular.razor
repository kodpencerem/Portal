@using VedasPortal.Repository.Interface;

@if (DuyurularListesi == null)

{

<p>
    <em>Yükleniyor...</em>
</p> }

else

{

<CardComponent cardStyle="Style.info">
    <CardHeader>
        <i class="far fa-list-alt"></i> Duyurlar
    </CardHeader>
    <CardBody>
        <div class="list-group" id="duyuruDiv">
            @foreach (var duyuru in DuyurularListesi.Where(d => d.DuyuruKutusundaOlsunMu == true).Take(3).ToList())
            {

<a href="duyuru/detay/@duyuru.Id" class="list-group-item list-group-item-action flex-column align-items-start">
    <div class="d-flex w-100 justify-content-between">
        <h6 class="mb-1">


            @if (duyuru.Adi != null)
            {
                duyuru.Adi = duyuru.Adi.Length > 60 ? duyuru.Adi.Substring(0, 27) + "..." : duyuru.Adi;@((MarkupString) duyuru.Adi)}


        </h6>
        <small>@duyuru.KayitTarihi.ToLongDateString()</small>
    </div>
    <p id="haberKutusu" class="mb-1">
        @if (duyuru.Aciklama != null)
        {
            duyuru.Aciklama = duyuru.Aciklama.Length > 200 ? duyuru.Aciklama.Substring(0, 150) + "..." : duyuru.Aciklama;@((MarkupString) duyuru.Aciklama)}

    </p>
</a>}

        </div>
    </CardBody>
</CardComponent>}


<style>
    #duyuruDiv {
        font-size: 10px
    }
</style>

@code { [Inject]
    public IBaseRepository<Yayin> DuyuruServisi { get; set; }


    private IEnumerable<Yayin> duyurularListesi = new List<Yayin>();
    protected IEnumerable<Yayin> DuyurularListesi { get => duyurularListesi; set => duyurularListesi = value; }

    protected IEnumerable<Yayin> TumDuyurulariGetir()
    {
        DuyurularListesi = DuyuruServisi.GetAll();

        return DuyurularListesi;

    }

    protected override Task OnInitializedAsync()
    {
        TumDuyurulariGetir();

        return Task.CompletedTask;
    } }