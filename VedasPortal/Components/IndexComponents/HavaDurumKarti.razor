@inject Services.HavaDurumuService.HavaDurumuService havaTahminiService
@using Services.HavaDurumuService

@if (listHavaTahmini != null)
{
	<div class="col-lg-6 col-sm-12 col-md-6 col-xs-12" @attributes="attributes">
		<div class="@("card "+cardBackground)" style="height:130px">
			<div class="card-body">
				<div class="text-white">
					<h4>@Sehir </h4>
					<div class="row">
						<span class="font-20">6 C°</span>
						<span class="font-20" style="margin-left:5px">40 %</span>
						<img style="margin-left:20px" src="https://cdn2.iconfinder.com/data/icons/weather-flat-14/64/weather02-512.png" width="60">
					</div>
				</div>
			</div>
		</div>
	</div>

}
@code {

	[Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> attributes { get; set; }

	[Parameter]
	public string Sehir { get; set; }
	[Parameter]
	public DateTime? Tarih { get; set; }
	[Parameter]
	public HavaDurumuBackground HavadurumuBackground { get; set; } = HavaDurumuBackground.orange;

	public string cardBackground
	{
		get
		{
			if (HavadurumuBackground == HavaDurumuBackground.orange)
				return "l-bg-orange";
			else if (HavadurumuBackground == HavaDurumuBackground.cyan)
				return "l-bg-cyan";
			else return "l-bg-cyan";
		}
	}

	public HavaTahminiResult listHavaTahmini { get; set; }
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		await base.OnAfterRenderAsync(firstRender);

		listHavaTahmini = await havaTahminiService.HavaDurumuGetir(Sehir, Tarih);

		await InvokeAsync(StateHasChanged);
	}

	public enum HavaDurumuBackground
	{
		orange,
		cyan,
		coral,
		Olive,
		Red,
		Blue,
		DarkBlue,
		LightBlue,
		Purple,
		Yellow,
		Lime,
		Magenta,
		Pink,
		Orange,
		White,
		Silver,
		Grey,
		Black,
		Brown,
		DarkBrown,
		LightBrown,
		Maroon,
		Green,
		Aquamarine,
		Aqua,
		Puce
	}
}
