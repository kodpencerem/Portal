@using VedasPortal.Entities.Models.ToplantiTakvimi;
@using VedasPortal.Entities.ViewModels
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Mvc.Rendering;
@using System;
@inject VedasPortal.Repository.Interface.IToplantiTakvimi toplantiTakvimi

<div class="ToDoForm d-flex flex-column">
    <i class="bi bi-x-circle m-2 ml-auto"
       @onclick="async () => { await OnCreatedToplanti.InvokeAsync(null); }">
    </i>
    <EditForm Model="@GetToplanti"
              OnValidSubmit="CreateToplanti"
              class="flex-grow-1 d-flex flex-column align-items-center">
        <DataAnnotationsValidator />

        <Div class="col-12">
            <CardComponent cardStyle="Style.warning">
                <CardBody>
                    <div class="d-flex justify-content-center">
                        <p class="mb-0 mr-2">
                            <label class="mb-0 d-flex align-items-center">
                                <span class="mr-2">Başlangıç Saati:</span>
                                <TimePickerComponent OnTimeChanged="UpdateStartTime" Time="GetToplanti.BaslangicTarihi"></TimePickerComponent>
                            </label>
                        </p>


                        <p class="mb-0 ml-2">
                            <label class="mb-0 d-flex align-items-center">
                                <span class="mr-2">Bitiş Saati:</span>
                                <TimePickerComponent OnTimeChanged="UpdateEndTime" Time="GetToplanti.BitisTarihi"></TimePickerComponent>
                            </label>
                        </p>
                    </div>
                    <br />
                    <div class="form-group col-md-12">
                        <label for="Countries">Toplantı Merkezi</label>
                        <InputSelect id="Countries" class="form-control"
                                     ValueExpression="@(() => ToplantiTakvimVm.MerkezId)"
                                     Value="@ToplantiTakvimVm.MerkezId"
                                     ValueChanged="@((string value) => OnMerkezChange(value))" required>

                            @foreach (var state in ToplantiTakvimVm.ListofToplantiMerkezleri)
                            {
                                <option value="@state.Value">@state.Text</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => ToplantiTakvimVm.MerkezId)" />
                    </div>
                    <br />
                    <div class="form-group col-md-12">
                        <label for="State">Toplantı Odası</label>
                        <InputSelect id="State" class="form-control"
                                     ValueExpression="@(() => ToplantiTakvimVm.OdaId)"
                                     Value="@ToplantiTakvimVm.OdaId"
                                     ValueChanged="@((string value) => OnOdaChange(value))" required>

                            @if (ToplantiTakvimVm.ListofToplantiOdalari != null)
                            {
                                @foreach (var state in ToplantiTakvimVm.ListofToplantiOdalari)
                                {
                                    <option value="@state.Value">@state.Text</option>
                                }
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => ToplantiTakvimVm.OdaId)" />

                    </div>

                    <br />
                    <div class="form-group col-md-12">
                        <label>
                            Toplantı Başlığı:
                        </label>
                        <InputText @bind-Value="GetToplanti.Baslik" class="form-control" />
                        <ValidationMessage For="@(() => GetToplanti.Baslik)" />
                    </div>
                    <br />
                    <div class="form-group col-md-12">
                        <label>Toplantı Konusu:</label>
                        <InputText @bind-Value="GetToplanti.Konu" class="form-control" />
                        <ValidationMessage For="@(() => GetToplanti.Konu)" />
                    </div>
                    <br />
                    <div class="form-group col-md-12">
                        <label>Katılım Sayısı Sınırı:</label>
                        <InputNumber @bind-Value="GetToplanti.BeklenenKatilimSayisi"
                                     class="form-control"
                                     min="0" />
                        <ValidationMessage For="@(() => GetToplanti.BeklenenKatilimSayisi)" />
                    </div>
                    <br />
                    <div class="form-group col-md-12">
                        <label>Açıklama:</label>
                        <InputTextArea @bind-Value="GetToplanti.Aciklama"
                                       class="form-control" />
                        <ValidationMessage For="@(() => GetToplanti.Aciklama)" />
                    </div>
                    <br />
                </CardBody>
                <CardFotter>
                    <button class="btn btn-primary align-self-stretch rounded-0 mt-auto"
                            type="submit">
                        Oluştur
                    </button>
                </CardFotter>
            </CardComponent>

        </Div>

    </EditForm>
</div>



@code {


    private Toplanti GetToplanti = new Toplanti();

    [Parameter]
    public DateTime Date { get; set; }

    [Parameter]
    public EventCallback<Toplanti> OnCreatedToplanti { get; set; }

    protected ToplantiTakvimVm ToplantiTakvimVm { get; set; } = new ToplantiTakvimVm();

    [CascadingParameter]
    public Task<AuthenticationState> State { get; set; }

    public async void CreateToplanti()
    {
        var authState = await State;

        var toplantiOlustur = new Toplanti()
        {
            Aciklama = GetToplanti.Aciklama,
            AktifPasif = GetToplanti.AktifPasif,
            BitisTarihi = GetToplanti.BitisTarihi,
            BaslangicTarihi = GetToplanti.BaslangicTarihi,
            AnaSayfadaGoster = GetToplanti.AnaSayfadaGoster,
            Baslik = GetToplanti.Baslik,
            BeklenenKatilimSayisi = GetToplanti.BeklenenKatilimSayisi,
            DuzenlemeTarihi = GetToplanti.DuzenlemeTarihi,
            DuzenleyenKullanici = authState.User.Identity.Name,
            KaydedenKullanici = authState.User.Identity.Name,
            KayitTarihi = GetToplanti.KayitTarihi,
            Kod = GetToplanti.Kod,
            ApplicationUser = GetToplanti.ApplicationUser,
            Konu = GetToplanti.Konu,
            PersonelId = GetToplanti.PersonelId,
            ToplantiTarihi = GetToplanti.BaslangicTarihi,
            Renk = GetToplanti.Renk,
            ToplantiNotu = GetToplanti.ToplantiNotu,
            SilenKullanici = GetToplanti.SilenKullanici,
            SilmeTarihi = GetToplanti.SilmeTarihi,
            ToplantiOdasiId = Convert.ToInt32(ToplantiTakvimVm.OdaId),
            VideoKonferansMi = GetToplanti.VideoKonferansMi,
            ToplantiMerkeziId = Convert.ToInt32(ToplantiTakvimVm.MerkezId)
        };

        await OnCreatedToplanti.InvokeAsync(toplantiOlustur);
    }

    public void UpdateStartTime(DateTime time)
    {
        GetToplanti.BaslangicTarihi = time;
    }

    public void UpdateEndTime(DateTime time)
    {
        GetToplanti.BitisTarihi = time;
    }

    protected override void OnInitialized()
    {
        GetToplanti.BaslangicTarihi = Date;
        GetToplanti.BitisTarihi = Date;

        ToplantiTakvimVm.ListofToplantiMerkezleri = toplantiTakvimi.ToplantiMerkezleri();
        ToplantiTakvimVm.MerkezId = "";
        ToplantiTakvimVm.ListofToplantiOdalari = new List<SelectListItem>()
        {
                new SelectListItem()
                {
                    Text = "Seçiniz",
                    Value = ""
                }
        };

    }

    protected void OnMerkezChange(string value)
    {

        if (value != null)
        {
            ToplantiTakvimVm.MerkezId = value.ToString();
            ToplantiTakvimVm.OdaId = "";
            ToplantiTakvimVm.ListofToplantiOdalari = new List<SelectListItem>()
            {
                    new SelectListItem()
                    {
                        Text = "Seçiniz...",
                        Value = ""
                    }
                };

            ToplantiTakvimVm.ListofToplantiOdalari = toplantiTakvimi.ToplantiOdalari(Convert.ToInt32(ToplantiTakvimVm.MerkezId));
            this.StateHasChanged();
        }
    }

    protected void OnOdaChange(string value)
    {
        if (value != null)
        {
            ToplantiTakvimVm.OdaId = value.ToString();
        }
    }

}