@using VedasPortal.Entities.Models.ToplantiTakvimi;

    <div class="ToDoForm d-flex flex-column">
        <i class="bi bi-x-circle m-2 ml-auto" @onclick="async ()=>{await OnCreatedToDo.InvokeAsync(null);}"></i>
        <EditForm Model="@toDo" OnValidSubmit="CreateToDo" class="flex-grow-1 d-flex flex-column align-items-center">
            <DataAnnotationsValidator/>

            <div class="d-flex justify-content-center">
                <p class="mb-0 mr-2">
                    <label class="mb-0 d-flex align-items-center">
                        <span class="mr-2">Başlangıç Tarihi:</span>
                        <TimePicker OnTimeChanged="UpdateStartTime" Time="toDo.Start"></TimePicker>
                    </label>
                </p>


                <p class="mb-0 ml-2">
                    <label class="mb-0 d-flex align-items-center">
                        <span class="mr-2">Bitiş Tarihi:</span>
                        <TimePicker OnTimeChanged="UpdateEndTime" Time="toDo.End"></TimePicker>
                    </label>
                </p>
            </div>


            <div class="mt-3">
                <label>
                    <span class="mr-2">Toplantı Konusu:</span>
                    <InputText @bind-Value="toDo.Text" class="form-control d-inline w-auto"></InputText>
                    <ValidationMessage For="@(()=>toDo.Text)"></ValidationMessage>
                </label>
            </div>

            <button class="btn btn-primary align-self-stretch rounded-0 mt-auto" type="submit">Oluştur</button>
        </EditForm >
    </div>



@code {
    private ToDo toDo = new ToDo();

    [Parameter]
    public DateTime Date { get; set; }

    [Parameter]
    public EventCallback<ToDo> OnCreatedToDo { get; set; }


    protected override void OnInitialized()
    {
        toDo.Start = Date;
        toDo.End = Date;
    }

    public async void CreateToDo()
    {

        await OnCreatedToDo.InvokeAsync(toDo);
    }

    public void UpdateStartTime(DateTime time){
        toDo.Start = time;

    }

    public void UpdateEndTime(DateTime time)
    {
        toDo.End = time;
    }

}
