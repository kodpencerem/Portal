@page "/IsEmirleri"
@using VedasPortal.Entities.Models.Kanban
@using VedasPortal.Repository.Interface
<div class="col-12">
    <CardComponent cardStyle="Style.info">
        <CardHeader>
            <NewTask OnSubmit="AddTask" @attributes="InputAttributes" />
        </CardHeader>
        <CardBody>
            <div class="row p-2">
                <Dropzone Oncellik="GorevOncelligi.Yuksek"
                          TaskItemsDictionary="TaskItems"
                          OnDrop="OnDrop"
                          OnStartDrag="OnStartDrag"
                          OnDragEnter="OnDragEnter"
                          OnDragEnd="OnDragEnd" />

                <Dropzone Oncellik="GorevOncelligi.Orta"
                          TaskItemsDictionary="TaskItems"
                          OnDrop="OnDrop"
                          OnStartDrag="OnStartDrag"
                          OnDragEnter="OnDragEnter"
                          OnDragEnd="OnDragEnd" />

                <Dropzone Oncellik="GorevOncelligi.Dusuk"
                          TaskItemsDictionary="TaskItems"
                          OnDrop="OnDrop"
                          OnStartDrag="OnStartDrag"
                          OnDragEnter="OnDragEnter"
                          OnDragEnd="OnDragEnd" />
            </div>

        </CardBody>
    </CardComponent>

</div>

@code{

    public GorevSecenek GecerliIsEmri { get; set; }

    public Dictionary<string, GorevSecenek> TaskItems { get; set; } = new Dictionary<string, GorevSecenek>();

    [Inject]
    protected IBaseRepository<GorevSecenek> Gorev { get; set; }
    protected IEnumerable<GorevSecenek> Gorevler;

    protected IEnumerable<GorevSecenek> TumGorevleriGetir()
    {
        Gorevler = Gorev.GetAll();
        return Gorevler;
    }

    protected override Task OnInitializedAsync()
    {
        TumGorevleriGetir();
        return Task.CompletedTask;
    }

    private void OnStartDrag(KeyValuePair<string, GorevSecenek> kvp)
    {
        GecerliIsEmri = kvp.Value;
    }

    private void OnDrop(GorevOncelligi gorevOncelligi)
    {
        GecerliIsEmri.Oncellik = gorevOncelligi;
        TumGorevleriGetir();
    }

    public Dictionary<string, object> InputAttributes { get; set; } = new Dictionary<string, object>()
{
        { "maxlength", "500" },
        { "placeholder", "Yeni Bir İş Girin" },
        { "title", "Bu metin kutusu, görevlerinizi girmek için kullanılır." }
    };

    private static string counter = "3";

    private void AddTask(string taskName)
    {
        counter = $"{(int.Parse(counter += 1)).ToString()}";

        var taskItem = new GorevSecenek()
        {
            GorevAdi = taskName,
            Oncellik = GorevOncelligi.Yuksek
        };
        TaskItems.Add(counter, taskItem);
    }

    public GorevSecenek NewTaskItem { get; set; }

    public void OnDragEnter(KeyValuePair<string, GorevSecenek> kvp)
    {

        if (kvp.Value != null && kvp.Value != GecerliIsEmri)
        {
            NewTaskItem = kvp.Value;
        }
    }

    public void OnDragEnd()
    {
        if (NewTaskItem != null)
        {

            var kvp1 = TaskItems.FirstOrDefault(x => x.Value == NewTaskItem);
            var kvp2 = TaskItems.FirstOrDefault(x => x.Value == GecerliIsEmri);

            TaskItems.Remove(kvp1.Key);
            TaskItems.Remove(kvp2.Key);

            TaskItems.Add(kvp1.Key, kvp2.Value);
            TaskItems.Add(kvp2.Key, kvp1.Value);

        }
        NewTaskItem = null;
    }
}

<style>
    .row {
        display: -ms-flexbox;
        display: -webkit-box;
        display: flex;
        -ms-flex-wrap: wrap;
        flex-wrap: wrap;
        margin-top: -15px;
        margin-right: -15px;
        margin-left: -15px;
    }
</style>