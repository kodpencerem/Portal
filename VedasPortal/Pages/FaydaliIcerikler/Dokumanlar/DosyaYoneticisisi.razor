@page "/dosyalar"
@inject IJSRuntime jsRuntime

@using Syncfusion.Blazor.FileManager;
@using Syncfusion.Blazor.Popups;
@using Syncfusion.Blazor.Buttons;


<SfFileManager @ref="filemanager"
               ID="filemanager"
               TValue="FileManagerDirectoryContent"
               AllowDragAndDrop="false">
    <FileManagerEvents TValue="FileManagerDirectoryContent"
                       OnFileOpen="FileOpen">

    </FileManagerEvents>
    <FileManagerAjaxSettings Url="/api/Home/FileOperations"
                             UploadUrl="/api/Home/Upload"
                             DownloadUrl="/api/Home/Download"
                             GetImageUrl="/api/Home/GetImage">
    </FileManagerAjaxSettings>
    <FileManagerContextMenuSettings File="@Items" Folder="@Items"></FileManagerContextMenuSettings>
    <FileManagerToolbarSettings Items="@TopItems"></FileManagerToolbarSettings>
</SfFileManager>
<SfDialog @ref="Dialog" Width="447px" Target="#filemanager" ShowCloseIcon="true" @bind-Visible="@IsVisible">
    <DialogEvents OnOpen="open" Closed="close"></DialogEvents>
    <DialogTemplates>
        <Header> Video Dosyası </Header>
        <Content>
            <video id="videoTagId" controls="controls" width="400px" height="262px">
                <source src=@source>
            </video>
        </Content>
    </DialogTemplates>
</SfDialog>
@code{

    public string[] Items = new string[] { "Open", "|", "Download", "|", "Details" };
    public string[] TopItems = new string[] { "Download", "SortBy", "Refresh", "Selection", "View", "Details" };

    SfDialog Dialog;
    SfFileManager<FileManagerDirectoryContent>
filemanager;
    private bool IsVisible { get; set; } = false;
    public string source { get; set; } = "";
    private void open()
    {
        // videonun load olayını çağırmamız gerekiyor
        jsRuntime.InvokeAsync<string>
            ("loadVideo");
    }
    public void close()
    {
        // kaynak niteliğini değiştirir ve videonun load olayını çağırır.
        this.source = "";
        jsRuntime.InvokeAsync<string>
            ("loadVideo");
    }

    public void FileOpen(Syncfusion.Blazor.FileManager.FileOpenEventArgs<FileManagerDirectoryContent>
        args)
    {
        if ((args.FileDetails.IsFile == true) && args.FileDetails.Type == ".mp4")
        {
            this.IsVisible = true;
            // kaynak özniteliği için yolu günceller
            this.source = args.FileDetails.FilterPath.Replace("\\", "/") + args.FileDetails.Name;

        }
    }

}
