// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VedasPortal.Data;

namespace VedasPortal.Migrations
{
    [DbContext(typeof(VedasDbContext))]
    [Migration("20220321115407_AddKursSertifika")]
    partial class AddKursSertifika
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Anket.Anket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("bit");

                    b.Property<string>("AnketSorusu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("SecilenAnketMi")
                        .HasColumnType("bit");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToplamAlinanSure")
                        .HasColumnType("int");

                    b.Property<int>("ToplamKatilim")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Anket");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Anket.AnketSecenek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fk_AnketId")
                        .HasColumnType("int");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ToplamKatilim")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Fk_AnketId");

                    b.ToTable("AnketSecenek");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Dosya.Dosya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("Bit");

                    b.Property<string>("Boyutu")
                        .HasMaxLength(30)
                        .HasColumnType("VarChar(30)");

                    b.Property<int?>("DuzelticiFaaliyetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("Date");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<int?>("EtkinlikId")
                        .HasColumnType("int");

                    b.Property<int?>("HaberDuyuruId")
                        .HasColumnType("int");

                    b.Property<int?>("IKUygulamaId")
                        .HasColumnType("int");

                    b.Property<byte>("Kategori")
                        .HasColumnType("TinyInt");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("MevzuatId")
                        .HasColumnType("int");

                    b.Property<int?>("OneriId")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("Date");

                    b.Property<int?>("ToplantiNotuId")
                        .HasColumnType("int");

                    b.Property<string>("Uzanti")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("Yolu")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.HasKey("Id");

                    b.HasIndex("DuzelticiFaaliyetId");

                    b.HasIndex("EtkinlikId");

                    b.HasIndex("HaberDuyuruId");

                    b.HasIndex("IKUygulamaId");

                    b.HasIndex("MevzuatId");

                    b.HasIndex("OneriId");

                    b.HasIndex("ToplantiNotuId");

                    b.ToTable("Dosya");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.DuzelticiFaaliyet.DuzelticiFaaliyet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("Bit");

                    b.Property<DateTime>("BildirimTarihi")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("Date");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<string>("FaaliyetGurupAdi")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("IstekFaaliyetKonusu")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<byte>("Kategori")
                        .HasColumnType("TinyInt");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("KonuEtiketi")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("LokasyonBilgisi")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("DuzelticiFaaliyet");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Etkinlik.Etkinlik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("Bit");

                    b.Property<bool>("AnasayfadaGoster")
                        .HasColumnType("Bit");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("Date");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("Date");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<byte>("KKategori")
                        .HasColumnType("TinyInt");

                    b.Property<byte>("Kategori")
                        .HasColumnType("TinyInt");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("No")
                        .HasColumnType("Int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("Date");

                    b.Property<bool>("SliderdaGoster")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("No");

                    b.ToTable("Etkinlik");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Etkinlik.Katilimci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("Date");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<int?>("EtkinlikId")
                        .HasColumnType("int");

                    b.Property<bool>("KatilisDurumu")
                        .HasColumnType("Bit");

                    b.Property<string>("KatilisNedeni")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("ResimId")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("Date");

                    b.Property<string>("TelefonNo")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.HasKey("Id");

                    b.HasIndex("EtkinlikId");

                    b.HasIndex("ResimId");

                    b.ToTable("Katilimci");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.HaberDuyuru.HaberDuyuru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("Bit");

                    b.Property<string>("AltBaslik")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<bool>("AnasayfadaGoster")
                        .HasColumnType("Bit");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("Date");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<byte>("Kategori")
                        .HasColumnType("TinyInt");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("No")
                        .HasColumnType("Int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("Date");

                    b.Property<bool>("SliderdaGoster")
                        .HasColumnType("Bit");

                    b.HasKey("Id");

                    b.HasIndex("No");

                    b.ToTable("HaberDuyuru");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.IKUygulama.IkUygulama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("bit");

                    b.Property<byte>("Birimler")
                        .HasColumnType("TinyInt");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("Date");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<byte>("Kategori")
                        .HasColumnType("TinyInt");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("IkUygulama");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Kanban.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaskItem");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Mevzuat.Mevzuat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Birimler")
                        .HasColumnType("TinyInt");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("Date");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<byte>("Kategori")
                        .HasColumnType("TinyInt");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("Mevzuat");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Oneri.Oneri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("Bit");

                    b.Property<byte>("Derece")
                        .HasColumnType("TinyInt");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("Date");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<string>("EPosta")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<bool>("KabulDurum")
                        .HasColumnType("Bit");

                    b.Property<byte>("Kategori")
                        .HasColumnType("TinyInt");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<byte>("Odul")
                        .HasColumnType("TinyInt");

                    b.Property<string>("RedNedeni")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("Date");

                    b.Property<string>("TelefonNo")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("YapanAdiSoyadı")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.HasKey("Id");

                    b.ToTable("Oneri");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Rehber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProfilResmiId")
                        .HasColumnType("int");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyadi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TelefonNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Unvani")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfilResmiId");

                    b.ToTable("Rehber");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiMerkezi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kapasite")
                        .HasColumnType("int");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("RezervDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("VideoKonferansMi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ToplantiMerkezi");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiNotu.ToplantiNotu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("Bit");

                    b.Property<string>("AltBaslik")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<byte>("Birimler")
                        .HasColumnType("TinyInt");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("Date");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasColumnType("VarChar");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("VarChar");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("Date");

                    b.Property<int?>("ToplantiMerkeziId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ToplantiMerkeziId");

                    b.ToTable("ToplantiNotu");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiOdasi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kapasite")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("RezervDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ToplantiMerkeziId")
                        .HasColumnType("int");

                    b.Property<int?>("ToplantiTakvimiId")
                        .HasColumnType("int");

                    b.Property<bool>("VideoKonferansMi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ToplantiMerkeziId");

                    b.HasIndex("ToplantiTakvimiId");

                    b.ToTable("ToplantiOdasi");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiTakvimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("bit");

                    b.Property<bool>("AnaSayfadaGoster")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Baslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BeklenenKatilimSayisi")
                        .HasColumnType("int");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GunAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Konu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesaj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Renk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TarihDegeri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToplantiMerkeziId")
                        .HasColumnType("int");

                    b.Property<string>("ToplantiNotu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToplantiTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("VideoKonferansMi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ToplantiMerkeziId");

                    b.ToTable("ToplantiTakvimi");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Video.Egitim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("bit");

                    b.Property<int>("Birimler")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Egitmen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gereksinim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KapakId")
                        .HasColumnType("int");

                    b.Property<int>("Kategori")
                        .HasColumnType("int");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KimlereUygun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KonuBasligi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sertifika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TamamlandiMi")
                        .HasColumnType("bit");

                    b.Property<long>("ToplamIzlenme")
                        .HasColumnType("bigint");

                    b.Property<long>("ToplamUzunluk")
                        .HasColumnType("bigint");

                    b.Property<int?>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KapakId");

                    b.HasIndex("VideoId");

                    b.ToTable("Egitim");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Video.KursVeSertifika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BaslamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KurumAdresi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SertifikaBaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SertifikaKodu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SertifikaUrlAdres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SertifikaVerilisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerenKurum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KursVeSertifika");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Video.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AktifPasif")
                        .HasColumnType("bit");

                    b.Property<string>("AltBaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Birimler")
                        .HasColumnType("int");

                    b.Property<int?>("DosyaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EtkinlikId")
                        .HasColumnType("int");

                    b.Property<int?>("HaberDuyuruId")
                        .HasColumnType("int");

                    b.Property<bool>("IzlenmeDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("Kategori")
                        .HasColumnType("int");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<long>("Uzunluk")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DosyaId");

                    b.HasIndex("EtkinlikId");

                    b.HasIndex("HaberDuyuruId");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Video.VideoYorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DuzenlemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuzenleyenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KaydedenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OnaylansınMı")
                        .HasColumnType("bit");

                    b.Property<string>("SilenKullanici")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("VideoYorum");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Anket.AnketSecenek", b =>
                {
                    b.HasOne("VedasPortal.Entities.Models.Anket.Anket", "Anket")
                        .WithMany("AnketSecenek")
                        .HasForeignKey("Fk_AnketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anket");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Dosya.Dosya", b =>
                {
                    b.HasOne("VedasPortal.Entities.Models.DuzelticiFaaliyet.DuzelticiFaaliyet", "DuzelticiFaaliyet")
                        .WithMany("Resim")
                        .HasForeignKey("DuzelticiFaaliyetId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("VedasPortal.Entities.Models.Etkinlik.Etkinlik", "Etkinlik")
                        .WithMany("Kapak")
                        .HasForeignKey("EtkinlikId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("VedasPortal.Entities.Models.HaberDuyuru.HaberDuyuru", "HaberDuyuru")
                        .WithMany("Dosya")
                        .HasForeignKey("HaberDuyuruId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("VedasPortal.Entities.Models.IKUygulama.IkUygulama", "IKUygulama")
                        .WithMany("Resim")
                        .HasForeignKey("IKUygulamaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("VedasPortal.Entities.Models.Mevzuat.Mevzuat", "Mevzuat")
                        .WithMany("Dosya")
                        .HasForeignKey("MevzuatId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("VedasPortal.Entities.Models.Oneri.Oneri", "Oneri")
                        .WithMany("OneriDosya")
                        .HasForeignKey("OneriId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiNotu.ToplantiNotu", "ToplantiNotu")
                        .WithMany("GetDosya")
                        .HasForeignKey("ToplantiNotuId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DuzelticiFaaliyet");

                    b.Navigation("Etkinlik");

                    b.Navigation("HaberDuyuru");

                    b.Navigation("IKUygulama");

                    b.Navigation("Mevzuat");

                    b.Navigation("Oneri");

                    b.Navigation("ToplantiNotu");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Etkinlik.Katilimci", b =>
                {
                    b.HasOne("VedasPortal.Entities.Models.Etkinlik.Etkinlik", "Etkinlik")
                        .WithMany("Katilimci")
                        .HasForeignKey("EtkinlikId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("VedasPortal.Entities.Models.Dosya.Dosya", "Resim")
                        .WithMany("Katilimci")
                        .HasForeignKey("ResimId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Etkinlik");

                    b.Navigation("Resim");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Rehber", b =>
                {
                    b.HasOne("VedasPortal.Entities.Models.Dosya.Dosya", "ProfilResmi")
                        .WithMany()
                        .HasForeignKey("ProfilResmiId");

                    b.Navigation("ProfilResmi");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiNotu.ToplantiNotu", b =>
                {
                    b.HasOne("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiMerkezi", "ToplantiMerkezi")
                        .WithMany("ToplantiNotlari")
                        .HasForeignKey("ToplantiMerkeziId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ToplantiMerkezi");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiOdasi", b =>
                {
                    b.HasOne("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiMerkezi", "ToplantiMerkezi")
                        .WithMany("ToplantiOdalari")
                        .HasForeignKey("ToplantiMerkeziId");

                    b.HasOne("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiTakvimi", "ToplantiTakvimi")
                        .WithMany("ToplantiOdasi")
                        .HasForeignKey("ToplantiTakvimiId");

                    b.Navigation("ToplantiMerkezi");

                    b.Navigation("ToplantiTakvimi");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiTakvimi", b =>
                {
                    b.HasOne("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiMerkezi", null)
                        .WithMany("ToplantiTakvimi")
                        .HasForeignKey("ToplantiMerkeziId");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Video.Egitim", b =>
                {
                    b.HasOne("VedasPortal.Entities.Models.Dosya.Dosya", "Kapak")
                        .WithMany()
                        .HasForeignKey("KapakId");

                    b.HasOne("VedasPortal.Entities.Models.Video.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId");

                    b.Navigation("Kapak");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Video.Video", b =>
                {
                    b.HasOne("VedasPortal.Entities.Models.Dosya.Dosya", "Dosya")
                        .WithMany("Video")
                        .HasForeignKey("DosyaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("VedasPortal.Entities.Models.Etkinlik.Etkinlik", "Etkinlik")
                        .WithMany()
                        .HasForeignKey("EtkinlikId");

                    b.HasOne("VedasPortal.Entities.Models.HaberDuyuru.HaberDuyuru", "HaberDuyuru")
                        .WithMany("Video")
                        .HasForeignKey("HaberDuyuruId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Dosya");

                    b.Navigation("Etkinlik");

                    b.Navigation("HaberDuyuru");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Video.VideoYorum", b =>
                {
                    b.HasOne("VedasPortal.Entities.Models.Video.Video", "Video")
                        .WithMany("VideoYorumlari")
                        .HasForeignKey("VideoId");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Anket.Anket", b =>
                {
                    b.Navigation("AnketSecenek");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Dosya.Dosya", b =>
                {
                    b.Navigation("Katilimci");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.DuzelticiFaaliyet.DuzelticiFaaliyet", b =>
                {
                    b.Navigation("Resim");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Etkinlik.Etkinlik", b =>
                {
                    b.Navigation("Kapak");

                    b.Navigation("Katilimci");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.HaberDuyuru.HaberDuyuru", b =>
                {
                    b.Navigation("Dosya");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.IKUygulama.IkUygulama", b =>
                {
                    b.Navigation("Resim");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Mevzuat.Mevzuat", b =>
                {
                    b.Navigation("Dosya");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Oneri.Oneri", b =>
                {
                    b.Navigation("OneriDosya");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiMerkezi", b =>
                {
                    b.Navigation("ToplantiNotlari");

                    b.Navigation("ToplantiOdalari");

                    b.Navigation("ToplantiTakvimi");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiNotu.ToplantiNotu", b =>
                {
                    b.Navigation("GetDosya");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.ToplantiTakvimi.ToplantiTakvimi", b =>
                {
                    b.Navigation("ToplantiOdasi");
                });

            modelBuilder.Entity("VedasPortal.Entities.Models.Video.Video", b =>
                {
                    b.Navigation("VideoYorumlari");
                });
#pragma warning restore 612, 618
        }
    }
}
